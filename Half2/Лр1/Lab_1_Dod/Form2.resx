<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aNjvLza08u4VC8TwMbMQ1rWjoAB8kH//2Q==
</value>
  </data>
</root>